% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gradientforest_ext.R
\name{gf_mvpart}
\alias{gf_mvpart}
\title{Gradient Forest MVPART}
\usage{
gf_mvpart(gf, mvpart_args = list(xv = c("1se", "min")[1], xval = 10,
  xvmult = 10, xvse = 1, plot.add = FALSE, text.add = FALSE, pretty =
  FALSE))
}
\arguments{
\item{gf}{A GF model, not a combined GF model though}

\item{mvpart_args}{argument list to mvpart::mvpart}
}
\value{
factor mapping between leaf nodes and samples sites. Each entry is a sample site, each level is a leaf node.
}
\description{
Apply an MVPART analysis to a dataset that is also being passed to Gradient Forest
}
\examples{

if (requireNamespace("gradientForest", quietly = TRUE)) {
library(gradientForest) #required to attach extendedForest
set.seed(1001)

species_dep <- matrix(runif(144, -5, 20), 9, 16)

env_samp <- matrix(runif(900, 1, 2), 100, 9)

species_response <- env_samp \%*\% species_dep
species_abundance <- data.frame(matrix(rpois(length(as.vector(species_response)), as.vector(species_response)), 100, 16))
names(species_abundance) <- LETTERS[1:16]

env_samp <- as.data.frame(env_samp)
names(env_samp) <- letters[1:9]

gf1 <- gradientForest::gradientForest(
    cbind(env_samp, species_abundance),
    letters[1:9],
    LETTERS[1:8]
)
gf2 <- gradientForest::gradientForest(
    cbind(env_samp, species_abundance),
    letters[1:9],
    LETTERS[1:8 + 8]
)

gf3 <- gradientForest::combinedGradientForest(west = gf1, east = gf2)

#The returned object is not trivial or easy to construct in other ways, so testing with hash functions.
testthat::expect_known_hash(gf_mvpart(gf1), "0b7d05ed")
testthat::expect_known_hash(gf_mvpart(gf2), "02c9ba96")
testthat::expect_error(gf_mvpart(gf3), "class(gf)[1] not equal to \\"gradientForest\\"", fixed = TRUE)
}
}
