% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/data_spatial.R
\name{align_sp}
\alias{align_sp}
\title{Align data.frame to a grid}
\usage{
align_sp(x, spatial_cols = c("lat", "lon"), res = 1, grid_offset = 0,
  fun, ...)
}
\arguments{
\item{x}{Data.frame of input data}

\item{spatial_cols}{character vector, columns in x and y that specify spatial position}

\item{res}{numeric. target grid resolution}

\item{grid_offset}{numeric. target grid offset}

\item{fun}{function, applied to data that falls in the same grid cell. If NULL, no agreggation is done}

\item{...}{additional arguments to fun}
}
\value{
data.frame, with spatial columns rounded to grid and rows aggregated by fun if fun is not NULL. Sorted ascending by spatial_cols, starting with spatial_cols[1]
}
\description{
Takes a data.frame and aligns it to a regular grid.
Rows that fall into the same grid cell are aggregated by fun.
If fun is NULL, then rows are not aggregated.
}
\details{
This function is suitable for sparse datasets that are not necessarily on grid, and are in data.frames.
The raster package should be used if both datasets are on a regular grid.
sp and sf packages should be used if you have want more complex spatial manipulations.
}
\examples{
set.seed(1000)

target_res <- 1/10

target_offset <- 0

spatial_cols <- c("lat", "lon")

#Parameters are checked
invalid_data <- cluster::clara(cluster::xclara, 5)
valid_data <- data.frame(lat = 1:5, lon = 1:5, val = 1:5)
testthat::expect_error(align_sp(invalid_data), "cannot coerce class ‘c(\\"clara\\", \\"partition\\")’ to a data.frame", fixed = TRUE)
testthat::expect_error(align_sp(valid_data[,2:3],  spatial_cols)  , "x does not have all of these name(s): 'lat', 'lon'",  fixed = TRUE)
testthat::expect_error(align_sp(valid_data,  res = "a")  , "res is not a numeric or integer vector",  fixed = TRUE)
testthat::expect_error(align_sp(valid_data,   res = c(1,2))  , "length(res) not equal to 1",  fixed = TRUE)
testthat::expect_error(align_sp(valid_data,  grid_offset = "a")  , "grid_offset is not a numeric or integer vector",  fixed = TRUE)
testthat::expect_error(align_sp(valid_data,  grid_offset = c(1,2))  , "length(grid_offset) not equal to 1",  fixed = TRUE)
testthat::expect_error(align_sp(valid_data,  fun = notafun)  , "object 'notafun' not found",  fixed = TRUE)

#Align to grid
x <- data.frame(lat = c(0.1, .14, .26, 0.2, 0.35), lon = c(0.1, 0.2, 0.26, .14, 0.45), val_x = 1:5)
browser()
testthat::expect_equal(align_sp(x,spatial_cols =  c("lat", "lon"), res = target_res, grid_offset = target_offset, fun = mean),
   data.frame(lat = c(0.1, .1, 0.2, .3, 0.3), lon = c(0.1, 0.2, .1, 0.3, 0.4), val_x =  c(1,2,4,3,5)))

#Alternative spatial_cols
sp_test <- data.frame(latitude = c(0.1, .14, .26, 0.2, 0.35), longitude = c(0.1, 0.2, 0.26, .14, 0.45), val_x = 1:5)

testthat::expect_equal(align_sp(sp_test, spatial_cols =  c("latitude", "longitude"), res = target_res, grid_offset = target_offset, fun = mean),
   data.frame(latitude = c(0.1, .1, 0.2, .3, 0.3), longitude = c(0.1, 0.2, .1, 0.3, 0.4), val_x = c(1,2,4,3,5)))


}
