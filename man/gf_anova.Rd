% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gradientforest_ext.R
\name{gf_anova}
\alias{gf_anova}
\title{Gradient Forest Clustering F-ratio}
\usage{
gf_anova(gf, k, clust)
}
\arguments{
\item{gf}{A gradient forest model}

\item{k}{number of clusters in fitting}

\item{clust}{integer vector assigning sample sites to clusters, must align with gf_spp}
}
\value{
list containing var_model, var_resid, f_ratio, p_value, cluster, inertia_exp
}
\description{
Calculate the F-ratio for predicting the species response using only the clustering.
}
\examples{

set.seed(1000)

if (requireNamespace("gradientForest", quietly = TRUE)) {
library(gradientForest) #required to attach extendedForest

cluster_tests <- 3:5

data(CoMLsimulation)
preds <- colnames(Xsimulation)
specs <- colnames(Ysimulation)
f1 <- gradientForest(data.frame(Ysimulation,Xsimulation), preds, specs[1:6], ntree=10)
f2 <- gradientForest(data.frame(Ysimulation,Xsimulation), preds, specs[1:6+6], ntree=10)
f12 <- combinedGradientForest(west=f1,east=f2)
f1.pred<-predict(f1) # defaults to predicting the samples

clust_list <- rphildyerphd:::cluster_range(f1.pred, k = cluster_tests) #no parameters passed to cluster::clara, not important


expected_f <- c(23.328, 18.5, 19.1)

for(i in 1:length(cluster_tests)){
  results <- rphildyerphd:::gf_anova(gf = f1, k = cluster_tests[i], clust = clust_list[[i]]$clustering)
  testthat::expect_named(results, c("var_model", "var_resid", "f_ratio", "p_value", "cluster", "inertia_exp"))
  testthat::expect_equal(results$cluster, cluster_tests[i])
  testthat::expect_equal(results$f_ratio, expected_f[i], tolerance = 1e-3)
}

results <- rphildyerphd:::gf_anova(gf = f1, k = cluster_tests[3], clust = clust_list[[3]]$clustering)
testthat::expect_equal(results, list(var_model = 16.1579,
   var_resid = 20.10891,
   f_ratio = 19.08359,
   p_value = 0.001,
   cluster = 5,
   inertia_exp = 0.5776277
   ),
  tolerance = 1e-3)

}
}
